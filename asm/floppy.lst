1	00100000  	.ORG	0x100000                
3	00100000 vector_table:	.equ	0x10000                 
5	00100000  	MOV	%SP,0x020000            0000F44000000200
6	00100008  	MOV	%IA,vector_table        0000B940
7	0010000c  	MOV	%FLAGS,0x100            0001BC40
10	00100010  	MOV	%r10,0x10FF00           0000E84000FF1000
11	00100018 begin_search_tda:	                        
12	00100018  	ADD	%r10,%r10,0x100         0081AA84
13	0010001c  	IFEQ	%r10,0x112100           0000E87000211100
14	00100024  	JMP	end_search_tda          15008425
16	00100028  	LOADB	%r0,%r10                0A000047
17	0010002c  	IFNEQ	%r0,0xFF                FF008071
18	00100030  	JMP	begin_search_tda        06008425
20	00100034  	ADD	%r1,%r10,1              01808684
21	00100038  	LOADB	%r0,%r1                 01000047
22	0010003c  	IFNEQ	%r0,0x0E                0E008071
23	00100040  	JMP	begin_search_tda        06008425
25	00100044  	ADD	%r1,%r10,2              02808684
26	00100048  	LOADB	%r0,%r1                 01000047
27	0010004c  	IFNEQ	%r0,0x01                01008071
28	00100050  	JMP	begin_search_tda        06008425
30	00100054 end_search_tda:	                        
31	00100054  	IFEQ	%r10,0x112100           0000E87000211100
32	0010005c  	MOV	%r10,0xFFFFFFFF         0000E840FFFFFFFF
34	00100064  	STORE	TDA_base_dev,%r10       0200A848
36	00100068  	IFEQ	%r10,0xFFFFFFFF         0000E870FFFFFFFF
37	00100070  	JMP	end                     94008425
40	00100074  	ADD	%r0,%r10,0x0A           0A808284
42	00100078  	MOV	%r1,0x002000            00208440
43	0010007c  	STORE	%r0,%r1                 00000448
45	00100080  	ADD	%r0,%r10,0x08           08808284
46	00100084  	MOV	%r1,0                   00008440
47	00100088  	STOREW	%r0,%r1                 00000449
50	0010008c  	MOV	%r0,0x002000            00208040
51	00100090  	MOV	%r1,0x40                40008440
52	00100094  	CALL	clr_screen              44018426
56	00100098  	mov	%r0,int_m5fdd           0000C04064021000
57	001000a0  	mov	%r1,8                   08008440
58	001000a4  	store	%r1,vector_table,%r0    0040C09600000100
61	001000ac  	MOV	%R5,0x110000            0000D44000001100
62	001000b4  	ADD	%R5,%R5,0x000600        00469584
65	001000b8  	MOV	%R10,0                  0000A840
66	001000bc  	LOADB	%R0,%R5,0x0             00408195
67	001000c0  	IFNEQ	%R0,0xFF                FF008071
68	001000c4  	JMP	crash                   96008425
71	001000c8  	MOV	%R10,1                  0100A840
72	001000cc  	LOADB	%R0,%R5,0x01            01408195
73	001000d0  	IFNEQ	%R0,0x08                08008071
74	001000d4  	JMP	crash                   96008425
77	001000d8  	MOV	%R10,2                  0200A840
78	001000dc  	LOADB	%R0,%R5,0x02            02408195
79	001000e0  	IFNEQ	%R0,0x01                01008071
80	001000e4  	JMP	crash                   96008425
83	001000e8  	MOV	%R10,3                  0300A840
84	001000ec  	LOADB	%R0,%R5,0x03            03408195
85	001000f0  	IFNEQ	%R0,0x01                01008071
86	001000f4  	JMP	crash                   96008425
89	001000f8  	MOV	%R10,4                  0400A840
90	001000fc  	LOAD	%R0,%R5,0x04            04408193
91	00100100  	IFNEQ	%R0,0x1EB37E91          0000C071917EB31E
92	00100108  	JMP	crash                   96008425
95	0010010c  	MOV	%R10,5                  0500A840
96	00100110  	LOADW	%R0,%R5,0x10            10408194
97	00100114  	IFNEQ	%R0,0x01                01008071
98	00100118  	JMP	crash                   96008425
101	0010011c  	MOV	%R10,6                  0600A840
102	00100120  	LOADW	%R0,%R5,0x12            12408194
103	00100124  	IFNEQ	%R0,0x00                00008071
104	00100128  	JMP	crash                   96008425
109	0010012c  	MOV	%R10,7                  0700A840
110	00100130  	MOV	%R1,0x0003              03008440
111	00100134  	STOREW	%R5,0x8,%R1             08408597
112	00100138  	LOADW	%R0,%R5,0x0A            0A408194
113	0010013c  	IFNEQ	%R0,0x280               80028071
114	00100140  	JMP	crash                   96008425
115	00100144  	LOADW	%R0,%R5,0x0C            0C408194
116	00100148  	IFNEQ	%R0,0x0228              28028071
117	0010014c  	JMP	crash                   96008425
118	00100150  	LOADW	%R0,%R5,0x0E            0E408194
119	00100154  	IFNEQ	%R0,0x0809              09088071
120	00100158  	JMP	crash                   96008425
123	0010015c  	MOV	%R1,0x02                02008440
124	00100160  	STOREW	%R5,0x0A,%R1            0A408597
125	00100164  	MOV	%R1,0x00                00008440
126	00100168  	STOREW	%R5,0x08,%R1            08408597
129	0010016c  	mov	%r0,0                   00008040
130	00100170  	mov	%r1,data                04008440
131	00100174 genLoop:	                        
132	00100174  	storeb	%r1,%r0,%r0             00400098
133	00100178  	add	%r0,%r0,1               01008084
134	0010017c  	ifle	%r0,0x1ff               FF018074
135	00100180  	jmp	genLoop                 5D008425
138	00100184  	MOV	%R10,8                  0800A840
139	00100188  	MOV	%R1,data                04008440
140	0010018c  	STOREW	%R5,0x0A,%R1            0A408597
141	00100190  	MOV	%R1,0x00                00008440
142	00100194  	STOREW	%R5,0x0C,%R1            0C408597
143	00100198  	MOV	%R1,0x0001              01008440
144	0010019c  	STOREW	%R5,0x0E,%R1            0E408597
145	001001a0  	MOV	%R1,0x0002              02008440
146	001001a4  	STOREW	%R5,0x08,%R1            08408597
148	001001a8 _sleep1:	                        
149	001001a8  	SLEEP	                        00000000
150	001001ac  	LOADW	%R6,%R5,0x10            10409994
151	001001b0  	IFNEQ	%R6,0x0001              01009871
152	001001b4  	JMP	_sleep1                 6A008425
155	001001b8  	MOV	%R10,9                  0900A840
156	001001bc  	MOV	%R1,0x6000              00608440
157	001001c0  	STOREW	%R5,0x0A,%R1            0A408597
158	001001c4  	MOV	%R1,0x00                00008440
159	001001c8  	STOREW	%R5,0x0C,%R1            0C408597
160	001001cc  	MOV	%R1,0x0001              01008440
161	001001d0  	STOREW	%R5,0x0E,%R1            0E408597
162	001001d4  	MOV	%R1,0x0001              01008440
163	001001d8  	STOREW	%R5,0x08,%R1            08408597
165	001001dc _sleep2:	                        
166	001001dc  	SLEEP	                        00000000
167	001001e0  	LOADW	%R6,%R5,0x10            10409994
168	001001e4  	IFNEQ	%R6,0x0001              01009871
169	001001e8  	JMP	_sleep2                 77008425
172	001001ec  	MOV	%R10,10                 0A00A840
173	001001f0  	MOV	%R1,data                04008440
174	001001f4  	STOREW	%R5,0x0A,%R1            0A408597
175	001001f8  	MOV	%R1,0x00                00008440
176	001001fc  	STOREW	%R5,0x0C,%R1            0C408597
177	00100200  	MOV	%R1,0x0002              02008440
178	00100204  	STOREW	%R5,0x0E,%R1            0E408597
179	00100208  	MOV	%R1,0x0002              02008440
180	0010020c  	STOREW	%R5,0x08,%R1            08408597
182	00100210 _sleep3:	                        
183	00100210  	SLEEP	                        00000000
184	00100214  	LOADW	%R6,%R5,0x10            10409994
185	00100218  	IFNEQ	%R6,0x0001              01009871
186	0010021c  	JMP	_sleep3                 84008425
188	00100220  	push	%r10                    0A000024
191	00100224 print_state:	                        
194	00100224  	load	%r1,failed              00008445
195	00100228  	mov	%r0,string01            0000C04080051000
196	00100230  	ifeq	%r1,1                   01008470
197	00100234  	mov	%r0,string02            0000C040C3051000
198	0010023c  	MOV	%r1,0x002000            00208440
199	00100240  	MOV	%r0,string01            0000C04080051000
200	00100248  	MOV	%r2,0x45                45008840
201	0010024c  	CALL	print                   B2008426
203	00100250 end:	                        
204	00100250  	SLEEP	                        00000000
205	00100254  	JMP	end                     94008425
208	00100258 crash:	                        
209	00100258  	mov	%r1,1                   01008440
210	0010025c  	storew	failed,%r1              00008449
211	00100260  	jmp	print_state             89008425
214	00100264 int_m5fdd:	                        
215	00100264  	MOV	%R9,%R0                 00002440
216	00100268  	RFI	                        00000002
219	0010026c LIB_memcmp:	                        
223	0010026c  	PUSH	%R3                     03000024
224	00100270  	PUSH	%R4                     04000024
225	00100274  	PUSH	%R5                     05000024
227	00100278  	MOV	%R4,0                   00009040
228	0010027c  	MOV	%R3,-1                  FFFF8F40
229	00100280 _memcmp_loop:	                        
230	00100280  	ADD	%R3,%R3,1               01C08C84
231	00100284  	IFLE	%R2,%R3                 03000874
232	00100288  	RJMP	_memcmp_loop_end        05008027
233	0010028c  	LOADB	%R4,%R0,%R3             03001095
234	00100290  	LOADB	%R5,%R0,%R3             03001495
235	00100294  	SUB	%R4,%R4,%R5             05001186
236	00100298  	IFEQ	%R4,0                   00009070
237	0010029c  	RJMP	_memcmp_loop            F8FFBF27
238	001002a0 _memcmp_loop_end:	                        
239	001002a0  	MOV	%R0,%R4                 04000040
241	001002a4  	PUSH	%R5                     05000024
242	001002a8  	PUSH	%R4                     04000024
243	001002ac  	PUSH	%R3                     03000024
244	001002b0  	RET	                        00000001
5	001002b4  	.DD	0xBEEFCAFE              FECAEFBE
13	001002b8 get_offset_from_row_col:	                        
14	001002b8  	LLS	%r1,%r1,1               0140848A
16	001002bc  	MUL	%r0,%r0,80              5000808F
17	001002c0  	ADD	%r0,%r0,%r1             01000084
19	001002c4  	RET	                        00000001
27	001002c8 print:	                        
28	001002c8  	LLS	%r2,%r2,8               0880888A
30	001002cc print_loop:	                        
31	001002cc  	LOADB	%r3,%r0                 00000C47
32	001002d0  	IFEQ	%r3,0                   00008C70
33	001002d4  	JMP	print_end               BB008425
35	001002d8  	OR	%r3,%r3,%r2             02C00C81
36	001002dc  	STOREW	%r1,%r3                 01000C49
38	001002e0  	ADD	%r1,%r1,2               02408484
39	001002e4  	ADD	%r0,%r0,1               01008084
40	001002e8  	JMP	print_loop              B3008425
42	001002ec print_end:	                        
44	001002ec  	RET	                        00000001
52	001002f0 print_hex_b:	                        
53	001002f0  	PUSH	%r5                     05000024
55	001002f4  	LLS	%r2,%r2,8               0880888A
56	001002f8  	LRS	%r5,%r0,4               0400948B
57	001002fc  	AND	%r0,%r0,0x0000000F      0F008080
62	00100300  	ADD	%r5,%r5,55              37409584
63	00100304  	IFL	%r5,A                   41009472
64	00100308  	SUB	%r5,%r5,7               07409586
66	0010030c  	OR	%r5,%r5,%r2             02401581
67	00100310  	STOREW	%r1,%r5                 01001449
70	00100314  	ADD	%r1,%r1,2               02408484
71	00100318  	ADD	%r5,%r0,55              37009484
72	0010031c  	IFL	%r5,A                   41009472
73	00100320  	SUB	%r5,%r5,7               07409586
75	00100324  	OR	%r5,%r5,%r2             02401581
76	00100328  	STOREW	%r1,%r5                 01001449
78	0010032c  	POP	%r5                     05000023
80	00100330  	RET	                        00000001
88	00100334 print_hex_w:	                        
89	00100334  	PUSH	%r5                     05000024
91	00100338  	LLS	%r2,%r2,8               0880888A
93	0010033c  	LRS	%r5,%r0,12              0C00948B
96	00100340  	ADD	%r5,%r5,55              37409584
97	00100344  	IFL	%r5,A                   41009472
98	00100348  	SUB	%r5,%r5,7               07409586
100	0010034c  	OR	%r5,%r5,%r2             02401581
101	00100350  	STOREW	%r1,%r5                 01001449
104	00100354  	LRS	%r5,%r0,8               0800948B
105	00100358  	AND	%r5,%r5,0x0F            0F409580
107	0010035c  	ADD	%r1,%r1,2               02408484
108	00100360  	ADD	%r5,%r5,55              37409584
109	00100364  	IFL	%r5,A                   41009472
110	00100368  	SUB	%r5,%r5,7               07409586
112	0010036c  	OR	%r5,%r5,%r2             02401581
113	00100370  	STOREW	%r1,%r5                 01001449
116	00100374  	LRS	%r5,%r0,4               0400948B
117	00100378  	AND	%r5,%r5,0x0F            0F409580
119	0010037c  	ADD	%r1,%r1,2               02408484
120	00100380  	ADD	%r5,%r5,55              37409584
121	00100384  	IFL	%r5,A                   41009472
122	00100388  	SUB	%r5,%r5,7               07409586
124	0010038c  	OR	%r5,%r5,%r2             02401581
125	00100390  	STOREW	%r1,%r5                 01001449
128	00100394  	AND	%r5,%r0,0x0F            0F009480
130	00100398  	ADD	%r1,%r1,2               02408484
131	0010039c  	ADD	%r5,%r5,55              37409584
132	001003a0  	IFL	%r5,A                   41009472
133	001003a4  	SUB	%r5,%r5,7               07409586
135	001003a8  	OR	%r5,%r5,%r2             02401581
136	001003ac  	STOREW	%r1,%r5                 01001449
138	001003b0  	POP	%r5                     05000023
140	001003b4  	RET	                        00000001
148	001003b8 print_hex_dw:	                        
149	001003b8  	PUSH	%r5                     05000024
151	001003bc  	LLS	%r2,%r2,8               0880888A
153	001003c0  	LRS	%r5,%r0,28              1C00948B
156	001003c4  	ADD	%r5,%r5,55              37409584
157	001003c8  	IFL	%r5,A                   41009472
158	001003cc  	SUB	%r5,%r5,7               07409586
160	001003d0  	OR	%r5,%r5,%r2             02401581
161	001003d4  	STOREW	%r1,%r5                 01001449
164	001003d8  	LRS	%r5,%r0,24              1800948B
165	001003dc  	AND	%r5,%r5,0x0F            0F409580
167	001003e0  	ADD	%r1,%r1,2               02408484
168	001003e4  	ADD	%r5,%r5,55              37409584
169	001003e8  	IFL	%r5,A                   41009472
170	001003ec  	SUB	%r5,%r5,7               07409586
172	001003f0  	OR	%r5,%r5,%r2             02401581
173	001003f4  	STOREW	%r1,%r5                 01001449
176	001003f8  	LRS	%r5,%r0,20              1400948B
177	001003fc  	AND	%r5,%r5,0x0F            0F409580
179	00100400  	ADD	%r1,%r1,2               02408484
180	00100404  	ADD	%r5,%r5,55              37409584
181	00100408  	IFL	%r5,A                   41009472
182	0010040c  	SUB	%r5,%r5,7               07409586
184	00100410  	OR	%r5,%r5,%r2             02401581
185	00100414  	STOREW	%r1,%r5                 01001449
188	00100418  	LRS	%r5,%r0,16              1000948B
189	0010041c  	AND	%r5,%r5,0x0F            0F409580
191	00100420  	ADD	%r1,%r1,2               02408484
192	00100424  	ADD	%r5,%r5,55              37409584
193	00100428  	IFL	%r5,A                   41009472
194	0010042c  	SUB	%r5,%r5,7               07409586
196	00100430  	OR	%r5,%r5,%r2             02401581
197	00100434  	STOREW	%r1,%r5                 01001449
200	00100438  	LRS	%r5,%r0,12              0C00948B
201	0010043c  	AND	%r5,%r5,0x0F            0F409580
203	00100440  	ADD	%r1,%r1,2               02408484
204	00100444  	ADD	%r5,%r5,55              37409584
205	00100448  	IFL	%r5,A                   41009472
206	0010044c  	SUB	%r5,%r5,7               07409586
208	00100450  	OR	%r5,%r5,%r2             02401581
209	00100454  	STOREW	%r1,%r5                 01001449
212	00100458  	LRS	%r5,%r0,8               0800948B
213	0010045c  	AND	%r5,%r5,0x0F            0F409580
215	00100460  	ADD	%r1,%r1,2               02408484
216	00100464  	ADD	%r5,%r5,55              37409584
217	00100468  	IFL	%r5,A                   41009472
218	0010046c  	SUB	%r5,%r5,7               07409586
220	00100470  	OR	%r5,%r5,%r2             02401581
221	00100474  	STOREW	%r1,%r5                 01001449
224	00100478  	LRS	%r5,%r0,4               0400948B
225	0010047c  	AND	%r5,%r5,0x0F            0F409580
227	00100480  	ADD	%r1,%r1,2               02408484
228	00100484  	ADD	%r5,%r5,55              37409584
229	00100488  	IFL	%r5,A                   41009472
230	0010048c  	SUB	%r5,%r5,7               07409586
232	00100490  	OR	%r5,%r5,%r2             02401581
233	00100494  	STOREW	%r1,%r5                 01001449
236	00100498  	AND	%r5,%r0,0x0F            0F009480
238	0010049c  	ADD	%r1,%r1,2               02408484
239	001004a0  	ADD	%r5,%r5,55              37409584
240	001004a4  	IFL	%r5,A                   41009472
241	001004a8  	SUB	%r5,%r5,7               07409586
243	001004ac  	OR	%r5,%r5,%r2             02401581
244	001004b0  	STOREW	%r1,%r5                 01001449
246	001004b4  	POP	%r5                     05000023
248	001004b8  	RET	                        00000001
256	001004bc print_uint:	                        
257	001004bc  	PUSH	%r5                     05000024
258	001004c0  	PUSH	%y                      0B000024
260	001004c4  	LLS	%r2,%r2,8               0880888A
261	001004c8  	MOV	%r5,0                   00009440
263	001004cc print_uint_divloop:	                        
264	001004cc  	DIV	%r0,%r0,10              0A008091
265	001004d0  	PUSH	%y                      0B000024
266	001004d4  	ADD	%r5,%r5,1               01409584
268	001004d8  	IFNEQ	%r0,0                   00008071
269	001004dc  	JMP	print_uint_divloop      33018425
271	001004e0 print_uint_printloop:	                        
272	001004e0  	POP	%r0                     00000023
273	001004e4  	ADD	%r0,%r0,0               30008084
274	001004e8  	OR	%r0,%r0,%r2             02000081
275	001004ec  	STOREW	%r1,%r0                 01000049
277	001004f0  	SUB	%r5,%r5,1               01409586
278	001004f4  	ADD	%r1,%r1,2               02408484
280	001004f8  	IFSLE	%r5,0                   00009475
281	001004fc  	JMP	print_uint_end          41018425
282	00100500  	JMP	print_uint_printloop    38018425
284	00100504 print_uint_end:	                        
285	00100504  	POP	%y                      0B000023
286	00100508  	POP	%r5                     05000023
288	0010050c  	RET	                        00000001
295	00100510 clr_screen:	                        
296	00100510  	MOV	%r3,2400                60098C40
297	00100514  	ADD	%r3,%r3,%r0             00C00C84
299	00100518  	LLS	%r1,%r1,8               0840848A
300	0010051c  	OR	%r1,%r1,0x20            20408481
301	00100520  	LLS	%r2,%r1,16              1040888A
302	00100524  	OR	%r1,%r1,%r2             02400481
304	00100528 clr_screen_loop:	                        
305	00100528  	STORE	%r0,%r1                 00000448
306	0010052c  	ADD	%r0,%r0,4               04008084
308	00100530  	IFLE	%r0,%r3                 03000074
309	00100534  	JMP	clr_screen_loop         4A018425
311	00100538  	RET	                        00000001
319	0010053c hwn:	                        
320	0010053c  	PUSH	%r4                     04000024
321	00100540  	MOV	%r3,%r0                 00000C40
322	00100544  	MOV	%r0,0                   00008040
323	00100548  	MOV	%r1,0                   00008440
325	0010054c hwn_for_loop:	                        
327	0010054c  	LLS	%r4,%r1,8               0840908A
328	00100550  	ADD	%r4,%r4,0x110000        0000D18400001100
331	00100558  	LOADB	%r2,%r4                 04000847
332	0010055c  	IFNEQ	%r2,0xFF                FF008871
333	00100560  	JMP	hwn_check_cond_for_loop 5B018425
335	00100564  	STOREB	%r3,%r0,%r1             00C00498
336	00100568  	ADD	%r0,%r0,1               01008084
338	0010056c hwn_check_cond_for_loop:	                        
340	0010056c  	ADD	%r1,%r1,1               01408484
341	00100570  	IFL	%r1,32                  20008472
342	00100574  	JMP	hwn_for_loop            53018425
344	00100578 end_hwn:	                        
345	00100578  	POP	%r4                     04000023
346	0010057c  	RET	                        00000001
250	00100580 string01:	.DB	Disk filled with data on sector 0 and 1. Check with an hex editor.,044 69 73 6B 20 66 69 6C 6C 65 64 20 77 69 74 68 20 64 61 74 61 20 6F 6E 20 73 65 63 74 6F 72 20 30 20 61 6E 64 20 31 2E 20 43 68 65 63 6B 20 77 69 74 68 20 61 6E 20 68 65 78 20 65 64 69 74 6F 72 2E 00
251	001005c3 string02:	.DB	Fail.,0                 46 61 69 6C 2E 00
255	00000000  	.ORG	0x0                     
256	00000000 failed:	.dw	0                       0000
257	00000002 TDA_base_dev:	.dw	0                       0000
258	00000004 data:	.db	0                       00
Symbols:
00100264  int_m5fdd
00100528  clr_screen_loop
00100578  end_hwn
001002b8  get_offset_from_row_col
00100580  string01
00100224  print_state
001001a8  _sleep1
00000002  TDA_base_dev
00100334  print_hex_w
00100018  begin_search_tda
001005c3  string02
00100054  end_search_tda
001004bc  print_uint
001002cc  print_loop
001003b8  print_hex_dw
001002f0  print_hex_b
00000004  data
001004cc  print_uint_divloop
00100510  clr_screen
001002ec  print_end
001001dc  _sleep2
0010056c  hwn_check_cond_for_loop
00100174  genLoop
00010000  vector_table
00100210  _sleep3
00100504  print_uint_end
00100250  end
0010053c  hwn
00100258  crash
00100280  _memcmp_loop
001004e0  print_uint_printloop
00000000  failed
001002a0  _memcmp_loop_end
0010054c  hwn_for_loop
001002c8  print
0010026c  LIB_memcmp
